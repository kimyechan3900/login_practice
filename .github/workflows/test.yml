name: Build and Test on Pull Request

on:
  push:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        #Checkout

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
        #JAVA JDK 11버전으로 환경설정

      - name: Generate Gradle Wrapper
        run: |
          chmod +x hello-spring/gradlew
          cd hello-spring && ./gradlew wrapper --gradle-version=7.3.3  # Specify the desired Gradle version
        
    

      - name: Build with Gradle
        run: |
          cd hello-spring && ./gradlew build

      - name: Run Tests
        run: |
          cd hello-spring && ./gradlew test
          
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'



      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Set up known hosts
        run: |
          ssh-keyscan -v -H 3.38.209.167 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          chmod 700 ~/.ssh
#
      - name: SCP FILE
        run: |
          cd hello-spring/build/libs && ls
          cat ~/.ssh/id_rsa
          ls && scp -i ~/.ssh/id_rsa hello-spring-0.0.1-SNAPSHOT.jar ubuntu@3.38.209.167:/home/ubuntu

      - name: Check if Port 8080 is in use
        id: port-check
        run: |
          if sudo lsof -t -i:8080; then
            echo "Port 8080 is in use."
            exit 1
          else
            echo "Port 8080 is available."
          fi

      - name: SSH and Deploy
        if: ${{ steps.port-check.outcome == 'success' }}
        run: |
          ssh -i "${{ secrets.SSH_PRIVATE_KEY }}" "${{ secrets.SSH_USERNAME }}"@"${{ secrets.SSH_PUBLIC_IP }}" "nohup java -jar /home/ubuntu/hello-spring-0.0.1-SNAPSHOT.jar > deployment.log 2>&1 &"
