name: Build and Test on Pull Request

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: [ 'SERVER1', 'SERVER2', 'SERVER3' ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build with Gradle
        run: |
          cd hello-spring
          chmod +x gradlew
          ./gradlew build

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd hello-spring
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: SCP FILE
        run: |
          cd hello-spring
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > temp_key
          chmod 600 temp_key
          
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          
          ssh-keyscan -H ${{ secrets[matrix.server+'_IP'] }} >> ~/.ssh/known_hosts
          
          scp -i temp_key ${{ secrets.LOCAL_FILE_PATH }} ubuntu@${{ secrets[matrix.server+'_IP'] }}:${{ secrets.DESTINATION_FILE_PATH }}
          rm temp_key

      - name: SSH to server and deploy docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.server+'_IP'] }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd login_practice/hello-spring
            sudo docker pull ${{ secrets.DOCKER_IMAGE_NAME }}
            sudo docker-compose up -d --remove-orphans
